{"version":3,"sources":["webpack:///./src/styles/Post.module.scss","webpack:///./src/styles/PostForm.module.scss","webpack:///./src/styles/Dashboard.module.scss","webpack:///./src/styles/AddPostButton.module.scss","webpack:///./src/components/PostForm.js","webpack:///./src/components/AddPostButton.js","webpack:///./src/components/Post.js","webpack:///./src/components/ToggleablePost.js","webpack:///./src/components/PostList.js","webpack:///./src/components/Dashboard.js","webpack:///./src/pages/admin.js"],"names":["module","exports","PostForm","props","useState","title","setTitle","body","setBody","onSubmit","id","e","preventDefault","updatePost","toggleForm","createPost","className","styles","form","name","type","value","onChange","target","buttons","onClick","deletePost","AddPostButton","isOpen","setIsOpen","button","width","viewBox","fill","xmlns","d","stroke","stroke-width","Post","li","createdAt","slice","ToggleablePost","PostList","posts","map","post","key","created_at","url","Dashboard","mode","setMode","setPosts","pages","setPages","toggleMode","a","fetch","method","then","data","json","catch","error","console","log","postsData","pagesData","JSON","stringify","createdPost","concat","useEffect","fetchData","main","nav","selected","oldPost","Object","assign","filter","Admin"],"mappings":"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","file":"component---src-pages-admin-js-ce894cfbf0eade1b4931.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Post-module--li--LInUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PostForm-module--form--1ct4l\",\"buttons\":\"PostForm-module--buttons--1Fw1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Dashboard-module--main--1Hb8C\",\"nav\":\"Dashboard-module--nav--1u-Ij\",\"selected\":\"Dashboard-module--selected--2X4aX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AddPostButton-module--button--17q26\"};","import React, { useState, useEffect } from \"react\"\n\nimport styles from \"../styles/PostForm.module.scss\"\n\nexport default function PostForm(props) {\n  const [title, setTitle] = useState(props.title || \"\")\n  const [body, setBody] = useState(props.body || \"\")\n\n  const updateTitle = e => setTitle(e.target.value)\n  const updateBody = e => setBody(e.target.value)\n\n  const updatePost = e => {\n    e.preventDefault()\n    title && body ? props.updatePost({ title, body, id: props.id }) : void 0\n    props.toggleForm()\n  }\n\n  const createPost = e => {\n    e.preventDefault()\n    title && body ? props.createPost({ title, body }) : void 0\n    props.toggleForm()\n  }\n\n  const deletePost = () => props.deletePost(props.id)\n\n  return (\n    <form onSubmit={props.id ? updatePost : createPost} className={styles.form}>\n      <input\n        name=\"title\"\n        type=\"text\"\n        className={styles.title}\n        value={title}\n        onChange={updateTitle}\n      />\n      <textarea\n        name=\"body\"\n        className={styles.body}\n        value={body}\n        onChange={updateBody}\n      />\n      <div className={styles.buttons}>\n        <button type=\"button\" onClick={props.toggleForm}>\n          cancel\n        </button>\n        <button type=\"submit\">{props.id ? \"update\" : \"create\"}</button>\n        {props.id && (\n          <button type=\"button\" onClick={deletePost}>\n            delete\n          </button>\n        )}\n      </div>\n    </form>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport PostForm from \"./PostForm\"\n\nimport styles from \"../styles/AddPostButton.module.scss\"\n\nexport default function AddPostButton(props) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleForm = () => setIsOpen(!isOpen)\n\n  return isOpen ? (\n    <PostForm toggleForm={toggleForm} createPost={props.createPost} />\n  ) : (\n    <button className={styles.button} onClick={toggleForm}>\n      <svg\n        width=\"279\"\n        viewBox=\"0 0 279 189\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M1.5 169C28.3333 186.834 83.1 208 87.5 150C93 77.5002 181 37.0002 200 80.0002C219 123 291.5 168.5 275.5 115C259.5 61.5001 238 -16.4999 275.5 5.00006\"\n          stroke=\"black\"\n          stroke-width=\"4\"\n        />\n      </svg>\n    </button>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\n\nimport styles from \"../styles/Post.module.scss\"\n\nexport default function Post(props) {\n  return (\n    <li className={styles.li} onClick={props.toggleForm}>\n      <h2>{props.title}</h2>\n      <h3>{`${props.createdAt.slice(0, 10)}.`}</h3>\n    </li>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport Post from \"./Post\"\nimport PostForm from \"./PostForm\"\n\nexport default function ToggleablePost(props) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleForm = () => setIsOpen(!isOpen)\n\n  return (\n    <>\n      {!isOpen && (\n        <Post\n          title={props.title}\n          createdAt={props.createdAt}\n          toggleForm={toggleForm}\n        />\n      )}\n      {isOpen && (\n        <PostForm\n          id={props.id}\n          title={props.title}\n          body={props.body}\n          toggleForm={toggleForm}\n          updatePost={props.updatePost}\n          deletePost={props.deletePost}\n        />\n      )}\n    </>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport ToggleablePost from \"./ToggleablePost\"\n\nexport default function PostList(props) {\n  return (\n    <ul>\n      {props.posts.map(post => {\n        return (\n          <ToggleablePost\n            key={post.id}\n            title={post.title}\n            body={post.body}\n            id={post.id}\n            createdAt={post.created_at}\n            updatePost={props.updatePost}\n            deletePost={props.deletePost}\n          />\n        )\n      })}\n    </ul>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport AddPostButton from \"./AddPostButton\"\nimport PostList from \"./PostList\"\n\nimport styles from \"../styles/Dashboard.module.scss\"\n\nconst url = \"https://vast-fortress-99756.herokuapp.com/api\"\n\nexport default function Dashboard(props) {\n  const [mode, setMode] = useState(\"posts\")\n  const [posts, setPosts] = useState([])\n  const [pages, setPages] = useState([])\n\n  const toggleMode = () => setMode(mode === \"posts\" ? \"pages\" : \"posts\")\n\n  async function fetchData() {\n    const postsData = await fetch(`${url}/posts`, {\n      method: \"GET\",\n    })\n      .then(data => data.json())\n      .catch(error => console.log(error))\n    setPosts(postsData.posts)\n\n    const pagesData = await fetch(`${url}/pages`, {\n      method: \"GET\",\n    })\n      .then(data => data.json())\n      .catch(error => console.log(error))\n    setPages(pagesData.pages)\n  }\n\n  const deletePost = id => {\n    fetch(`${url}/${mode}/${id}`, { method: \"DELETE\" }).then(post =>\n      post.json()\n    )\n    mode === \"posts\"\n      ? setPosts(posts => posts.filter(post => post.id !== id))\n      : setPages(posts => posts.filter(post => post.id !== id))\n  }\n\n  async function createPost(post) {\n    let createdPost = await fetch(`${url}/${mode}`, {\n      method: \"POST\",\n      body: JSON.stringify(post),\n    }).then(post => post.json())\n    mode === \"posts\"\n      ? setPosts(posts => [].concat(createdPost).concat(posts))\n      : setPages(posts => [].concat(createdPost).concat(posts))\n  }\n\n  const updatePost = post => {\n    const { title, body, id } = post\n    fetch(`${url}/${mode}/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({ title, body }),\n    }).then(post => post.json())\n\n    mode === \"posts\"\n      ? setPosts(posts =>\n          posts.map(oldPost => {\n            return oldPost.id === post.id\n              ? Object.assign({}, oldPost, {\n                  title: post.title,\n                  body: post.body,\n                })\n              : oldPost\n          })\n        )\n      : setPages(posts =>\n          posts.map(oldPost => {\n            return oldPost.id === post.id\n              ? Object.assign({}, oldPost, {\n                  title: post.title,\n                  body: post.body,\n                })\n              : oldPost\n          })\n        )\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  return (\n    <main className={styles.main}>\n      <nav className={styles.nav}>\n        <ul>\n          <li\n            className={mode === \"posts\" ? styles.selected : null}\n            onClick={toggleMode}\n          >\n            Posts.\n          </li>\n          <li\n            className={mode === \"pages\" ? styles.selected : null}\n            onClick={toggleMode}\n          >\n            Pages.\n          </li>\n        </ul>\n      </nav>\n      <PostList\n        posts={mode === \"posts\" ? posts : pages}\n        updatePost={updatePost}\n        deletePost={deletePost}\n      />\n      <AddPostButton createPost={createPost} />\n    </main>\n  )\n}\n","import React from \"react\"\nimport Dashboard from \"../components/Dashboard\"\n\nexport default function Admin() {\n  return <Dashboard />\n}\n"],"sourceRoot":""}